{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RishaS\\\\OneDrive\\\\Documents\\\\IntelliJProjects\\\\react-spring-project\\\\crud-json-app\\\\src\\\\components\\\\AllUsers.jsx\",\n  _s = $RefreshSig$();\n//useEffect = component DID mount => called when component is mounted on DOM\n//useState = for storing we use this => \nimport { useEffect, useState } from \"react\";\nimport { Table, TableBody, TableCell, TableHead, TableRow, styled } from \"@mui/material\";\nimport { getUsers } from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTable = styled(Table)`\n    width : 90%;\n    margin : 50px auto 0 auto;\n`;\n_c = StyledTable;\nconst THead = styled(TableRow)`\n    background : #000;\n    & > th {\n        color : #fff;\n        font-size : 20px;\n    }\n`;\n_c2 = THead;\nconst TBody = styled(TableRow)`\n    & > td {\n        font-size : 15px;\n    }\n`;\n_c3 = TBody;\nconst AllUser = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getUsersDetails();\n  }, []);\n  const getUsersDetails = async () => {\n    let response = await getUsers();\n    console.log(response);\n    setUsers(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTable, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(THead, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(TBody, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AllUser, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c4 = AllUser;\nexport default AllUser;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledTable\");\n$RefreshReg$(_c2, \"THead\");\n$RefreshReg$(_c3, \"TBody\");\n$RefreshReg$(_c4, \"AllUser\");","map":{"version":3,"names":["useEffect","useState","Table","TableBody","TableCell","TableHead","TableRow","styled","getUsers","jsxDEV","_jsxDEV","StyledTable","_c","THead","_c2","TBody","_c3","AllUser","_s","users","setUsers","getUsersDetails","response","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","id","name","username","email","phone","_c4","$RefreshReg$"],"sources":["C:/Users/RishaS/OneDrive/Documents/IntelliJProjects/react-spring-project/crud-json-app/src/components/AllUsers.jsx"],"sourcesContent":["//useEffect = component DID mount => called when component is mounted on DOM\r\n//useState = for storing we use this => \r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, styled } from \"@mui/material\";\r\n\r\nimport { getUsers } from \"../service/api\";\r\n\r\n\r\nconst StyledTable = styled(Table)`\r\n    width : 90%;\r\n    margin : 50px auto 0 auto;\r\n`\r\nconst THead = styled(TableRow)`\r\n    background : #000;\r\n    & > th {\r\n        color : #fff;\r\n        font-size : 20px;\r\n    }\r\n`\r\nconst TBody = styled(TableRow)`\r\n    & > td {\r\n        font-size : 15px;\r\n    }\r\n`\r\n\r\nconst AllUser = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getUsersDetails();\r\n    }, [])\r\n\r\n    const getUsersDetails = async ()    => {\r\n        let response = await getUsers();\r\n        console.log(response);\r\n        setUsers(response.data);\r\n    }\r\n\r\n    return (\r\n        <StyledTable>\r\n            <TableHead>\r\n                <THead>\r\n                    <TableCell>Id</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Username</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                </THead>\r\n            </TableHead>\r\n            <TableBody>\r\n                {\r\n                    users.map(user =>(\r\n                        <TBody>\r\n                            <TableCell>{user.id}</TableCell>\r\n                            <TableCell>{user.name}</TableCell>\r\n                            <TableCell>{user.username}</TableCell>\r\n                            <TableCell>{user.email}</TableCell>\r\n                            <TableCell>{user.phone}</TableCell>\r\n                        </TBody>\r\n                    ))\r\n                }\r\n            </TableBody>\r\n        </StyledTable>\r\n    )\r\n}\r\n    \r\n\r\nexport default AllUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}